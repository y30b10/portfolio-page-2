@use 'variable' as *;
@use 'map' as *;
@use 'function' as *;



/// Flex
///
// Align
@mixin flex ($fd: row, $jc: center, $ai: center) {//, $r: pxrem(20), $c: pxrem(20)) {
  display: flex;
  flex-direction: $fd;
  justify-content: $jc;
  align-items: $ai;
  //gap: $r $c;
}

// Center column content
@mixin flex-article-center-col($fd: column, $jc: flex-start, $ai: center, $r: pxrem(20), $c: pxrem(20)) {
  display: flex;
  flex-direction: $fd;
  justify-content: $jc;
  align-items: $ai;
  gap: $r $c;
}


/// Grid
/// 
@mixin grid() {
  display: grid;
  
}



/*
@mixin font-sizes($font-sizes-map, $bp-key: $breakpoints-metric) {
  @each $bp-key, $fs-value in $font-sizes-map {
    @if $bp-key == null {
      font-size: $fs-value;
    }
    @else {
      @if map-has-key($breakpoints-metric, $bp-key) {
        $bp-key: map-get($breakpoints-metric, $bp-key);
      }
      @media only screen and (min-width: $bp-key) {
        font-size: $fs-value;
      }
    }
  }
}
*/

@mixin card-header-padding-fix($card-header-padding-fix-map, $bp-key: $card-header-padding-fix) {
  @each $bp-key, $padding-value in $card-header-padding-fix-map {
    @if $bp-key == null {
      padding: $padding-value;
    }
    @else {
      @if map-has-key($bp-key) {
        @media only screen and (min-width: $bp-key) {
          padding: $padding-value;
        }
      }
    }
  }
}
//*/